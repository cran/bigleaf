NEWS for Package 'bigleaf'

version 0.8.1 (2022-04-27)

 - code examples in vignette updated
 - example in wind.profile() coded more efficiently


version 0.8.0 (2022-04-26)

 - new function optimum.temperature() added by Alison Bennett. Calculates optimum temperature of
   GPP (or any other flux) using boundary line analysis. 
   

version 0.7.6 (2022-01-18)

 - new function roughness.length.heat() added. Calculates roughness length for heat (z0h). 
 - new output z0h added to function aerodynamic.conductance(). New test function for aerodynamic conductance.
 - bug fix in stability.correction() related to NA handling. New test function for stability.correction()
 - new roxygen2 version


version 0.7.5 (2022-01-10)

 - growing season filter within filter.data() adjusted so that it can handle time series that start or 
   end with incomplete days (i.e. time series that start/end in the middle of the day).
   

version 0.7.4 (2022-01-10)

 - Solver functions within dew.point() and wetbulb.temp() not called if any of the inputs
   is NA, NaN, or Inf. In this case the function returns NA (and not the upper bound as in previous versions).
   

version 0.7.3 (2022-01-09)

 - Factor 0.93 in wetbulb.temp documented and added to list of constants as 'Le067', defined as the 
   Lewis number to the power of 0.67.
   

version 0.7.2 (2020-01-28)

 - z0m as input to Choudhury_1988 and Su_2001 functions for boundary layer conductance. Avoids the implicit 
   assumptions that z0m is constant over the    entire time period. If z0m is not provided as input, the assumption
   of a constant z0m is still made and z0m is estimated from the roughness.parameters (method='wind_profile') function. 
 - wind.profile() function rewritten: heights (argument z) for which wind speed is calculated must have the same length 
   as the other input data (or of length 1). If wind speed at multiple height needs to be calculated, this needs to be
   done outside the function (e.g. as a for loop as in the function example).


version 0.7.1 (2019-06-08)

 - package rebuilt with knitr version 1.23 (fixed encoding issue)


version 0.7.0 (2019-03-15)

 - new functions added: extraterrestrial.radiation() and potential.radiation()
 - vignette updated
 - function e.to.rH() added to unit conversions
 - function kg.to.mol() added to unit conversions (not yet in use)
 - solar_constant and H2Omol added to bigleaf.constants
 - CITATION file added
 


version 0.6.5 (2018-06-17)

  - Vignette "Tutorial on bigleaf" added 

  
version 0.6.4 (2018-06-15)

  - bug fix to energy.closure(): G and S were previously always ignored in the calculation of the intercept and slope.  

  
version 0.6.3 (2018-06-13)

 - rownames corrected in the example datasets (starting at 1 now)
 - second part of output in filter.data() function is only shown if at least one variable is actually filtered.
 - default values for several arguments changed (e.g. "Ga" to "Ga_h") to ensure internal consistency


version 0.6.2 (2018-06-11)

 - hard-coded conversion factors replaced by constants (e.g. g2kg, Pa2kPa, umol2mol, etc.)
   which were added to the bigleaf.constants() list.
 
 
version 0.6.1 (2018-04-18)

 - default names for 'formulation' arguments changed for clarity in surface.conductance() 
   and decoupling(). "PenmanMonteith" is changed to "Penman-Monteith", "FluxGradient" to 
   "Flux-Gradient", and "JarvisMcNaughton_1986" to "Jarvis&McNaughton_1986".


version 0.6.0 (2018-04-18)

 - function reference.ET() is now covered by potential.ET(). If 'approach=Penman-Monteith',
   potential ET is calculated according to the Penman-Monteith equation (as previously
   in reference.ET()). Argument 'Gs_pot' (formerly 'Gs_ref') is given in mol m-2 s-1
   and defaults to 0.6 mol m-2 s-1.
   

version 0.5.2 (2018-04-10)
  - Gb output in aerodynamic.conductance and Gb functions renamed to Gb_h to clarify
    that values correspond to heat transfer. Same for Rb and kB.


version 0.5.1 (2018-04-09)

  - results of additional quantities (for which Sc is provided) are expressed as 
    conductances instead of resistances in aerodynamic.conductance()
  - 'data' included as argument in radiometric.surface.temp()
  - calculation of 'nr_data' accounts for missing values in Gamma if model=Leuning
    (function stomatal.slope())
    

version 0.5.0 (2018-04-06)

  - wind.profile() function restructured. z0m can be provided or calculated from
    the logarithmic wind profile equation
  - reflectance of downwelling longwave radiation is now accounted for in the 
    calculation of radiometric surface temperature (function radiometric.surface.temp())
  - variable 'LW_down' added to dataset DE_Tha_Jun_2014
  - argument 'calc.surface.CO2' removed from intercellular.CO2()
  

version 0.4.6 (2018-04-05)

  - important bugfix concerning several functions: all required arguments are passed
    to nested functions
  - argument 'N' in aerodynamic.conductance() now defaults to 2 as in Gb.Su()


version 0.4.5 (2018-03-16)

  - variables 'LW_up' (upward longwave radiation) and 'Reco' (ecosystem respiration)
    were added to all three example datasets
  - bug fix to 'surface.conditions' and 'pressure.from.elevation' regarding the 
    'Esat.formulation' argument. In 'Esat.formulation', this argument is not
	  implemented and the default formulation is taken for all calculations.
  
  

version 0.4.4 (2018-03-13)

  - 'reference.ET': argument Gs renamed to Gs_ref

	  
version 0.4.3 (2018-03-12)

  - Function 'bigleaf.constants' restructured in a way that allows 
    changing the constants for each function call


version 0.4.2 (2018-03-12)

  - constants (a,b,c) from Allen et al. 1998 added as option to 'Esat.slope'
   	(pull request from Rémi Vezy)
  - Argument 'Esat.formula' added to every function that calculates esat
    or slope of esat to allow consistency among functions.  
  - 'light.response': argument "..." added to the nls function
  - 'stomatal.slope': argument "..." within each call of nls in the function	
  
		 
version 0.4.1 (2018-03-08)

  - aerodynamic.conductance: Ga_CO2 added to function output 


version 0.4.0 (2018-03-08)

  - 'aerodynamic.conductance': Rb can be calculated for other quantities if 
    the respective Schmidt number is provided. I.e. new arguments "Sc" and
    "Sc_name" as the value of the Schmidt number, and the name of the quantity
 	  for which Sc is provided, respectively.
  - 'bigleaf.constants': Prandtl number (Pr) and Schmidt number for CO2 (Sc_CO2)
     added
  - 'light.response': bug fix: +Reco replaced by -Reco (sign was reversed)
		 
		 
version 0.3.2 (2018-03-06)	
	 
  - rH.to.VPD: if statement vectorized (thanks to Rémi Vezy)
  - radiometric.surface.temp: Output renamed	("." replaced by "_")

	   
version 0.3.1 (2018-02-09)		  

  - Monin.Obukhov.length: default arguments added
		 
         		 